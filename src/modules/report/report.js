import React, { useState } from "react";
import PortfolioEvolution from "./subReports/operationalViews/portfolioEvolution";
import TotalRevenueEvolution from "./subReports/businessViews/totalRevenueEvolution";
import ContributionMargin from "./subReports/businessViews/contributionMargin";
import { BarChart3, TrendingUp, DollarSign, ChevronRight } from 'lucide-react';
import { Button, Icon } from 'semantic-ui-react';
import GeneratePPT from "./generatePPT";



const colors = {
  primary: "#0070ad",
  secondary: "#12abdb",
  accent: "#2b0a3d",
  lightGray: "#f2f2f2",
};

const Breadcrumbs = ({ items, onNavigate }) => (
<div className="flex items-center text-lg text-gray-600 mb-2">
  {items.map((item, index) => (
    <React.Fragment key={index}>
      <span
        className={`cursor-pointer ${index === items.length - 1 ? 'text-gray-900 font-semibold' : 'hover:text-blue-600'}`}
        onClick={() => onNavigate(index)}
      >
        {item}
      </span>
      {index < items.length - 1 && (
        <ChevronRight className="mx-2 text-gray-400" size={16} />
      )}
    </React.Fragment>
  ))}
</div>
);

const Card = ({ title, description, onClick, icon: Icon }) => (
  <div
    className="flex-shrink-0 w-96 p-4 m-2 bg-white rounded-lg shadow-md cursor-pointer transition-transform hover:scale-105"
    style={{ borderTop: `4px solid ${colors.secondary}` }}
    onClick={onClick}
  >
    {Icon && <Icon className="mb-2" size={32} color={colors.primary} />}
    <h2
      className="text-xl font-semibold mb-2"
      style={{ color: colors.primary }}
    >
      {title}
    </h2>
    <p className="text-md text-gray-600">{description}</p>
  </div>
);

const Subsection = ({ title, cards }) => (
  <div className="mb-8">
    <h2 className="text-2xl font-bold mb-4" style={{ color: colors.accent }}>
      {title}
    </h2>
    <div className="flex overflow-x-auto pb-4">
      {cards.map((card, index) => (
        <Card key={index} {...card} />
      ))}
    </div>
  </div>
);

const Report = () => {
  const [selectedCard, setSelectedCard] = useState(null);
  const [breadcrumbs, setBreadcrumbs] = useState(["Reports"]);
  const [showForm, setShowForm] = useState(false);

  const subsections = [
    {
      title: "Business Views",
      cards: [
        {
          title: "Total Revenue Evolution",
          description: "Total revenue generated by major Entities",
          icon: DollarSign,
          component: () => <TotalRevenueEvolution colors={colors} />, 
        },
        {
          title: "Contribution Margin",
          description: "Contribution margin by major entities",
          icon: BarChart3,
          component: () => <ContributionMargin colors={colors} />, 
        },
      ],
    },
    {
      title: "Operational Views",
      cards: [
        {
          title: "Portfolio Evolution",
          description: "Key performance indicators for ongoing projects",
          icon: TrendingUp,
          component: () => <PortfolioEvolution colors={colors} />, 
        },
      ],
    },
  ];

  const handleCardClick = (subsection, card) => {
    setSelectedCard(card);
    setBreadcrumbs(["Reports", subsection.title, card.title]);
  };

  const handleBreadcrumbNavigation = (index) => {
    setBreadcrumbs(breadcrumbs.slice(0, index + 1));
    if (index < 2) setSelectedCard(null);
  };

  const handleExportClick = () => {
    setShowForm(true);
  };

  const handleCloseModal = () => {
    setShowForm(false);
  };

  return (
    <div className="mx-auto" style={{ padding: "16px" }}>
      <div className="flex justify-between items-center mb-2 shadow-md">
        <Breadcrumbs items={breadcrumbs} onNavigate={handleBreadcrumbNavigation} />
        {breadcrumbs.length === 1 && (
          <Button color="blue" basic onClick={handleExportClick} icon labelPosition='right'>
            Generate PPT
            <Icon name='file powerpoint' />
          </Button>
        )}
      </div>
      {showForm && <GeneratePPT onClose={handleCloseModal} />}
      {selectedCard ? (
        <div className="shadow-lg border border-black">
          {selectedCard.component()}
        </div>
      ) : (
        subsections.map((subsection, index) => (
          <Subsection
            key={index}
            title={subsection.title}
            cards={subsection.cards.map((card) => ({
              ...card,
              onClick: () => handleCardClick(subsection, card),
            }))}
          />
        ))
      )}
    </div>
  );
};

export default Report;
